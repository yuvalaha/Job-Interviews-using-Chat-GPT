{"ast":null,"code":"import axios from \"axios\";\nimport { appConfig } from \"../Utils/AppConfig\";\nclass ChatGptService {\n  // prompt: ChatGPT-השאלה או הפקודה שאנו שולחים ל\n  // completion: מחזיר לנו בחזרה ChatGPT-התשובה ש\n  // token: גודל מידע ששווה בערך ל-4 תווים, משמש למציאת התשובה, קיימת הגבלה מבחינת כמות הטוקנים שניתן לשלוח\n  // model: האלגוריתם המשמש לצ'אט\n\n  async chat(prompt) {\n    const body = {\n      model: \"gpt-3.5-turbo\",\n      max_tokens: 4096,\n      messages: [\n      // { role: \"system\", content: \"You are a helpful assistant.\" } // General ChatGPT Personality\n      {\n        role: \"system\",\n        content: \"You are a programming technology expert.\"\n      },\n      // Specific ChatGPT Personality\n      {\n        role: \"user\",\n        content: prompt\n      }]\n    };\n    const options = {\n      headers: {\n        Authorization: \"Bearer \" + appConfig.chatGptApiKey // Bearer לא לשכוח את הרווח אחרי המילה\n      }\n    };\n    const response = await axios.post(appConfig.chatGptUrl, body, options);\n    const completion = response.data.choices[0].message.content;\n    return completion;\n  }\n}\nexport const chatGptService = new ChatGptService();","map":{"version":3,"names":["axios","appConfig","ChatGptService","chat","prompt","body","model","max_tokens","messages","role","content","options","headers","Authorization","chatGptApiKey","response","post","chatGptUrl","completion","data","choices","message","chatGptService"],"sources":["C:/Full Stack/Main Projects/Finished projects/Job Interview using ChatGPT/src/Services/ChatGptService.ts"],"sourcesContent":["import axios from \"axios\";\nimport { appConfig } from \"../Utils/AppConfig\";\n\nclass ChatGptService {\n\t\n    // prompt: ChatGPT-השאלה או הפקודה שאנו שולחים ל\n    // completion: מחזיר לנו בחזרה ChatGPT-התשובה ש\n    // token: גודל מידע ששווה בערך ל-4 תווים, משמש למציאת התשובה, קיימת הגבלה מבחינת כמות הטוקנים שניתן לשלוח\n    // model: האלגוריתם המשמש לצ'אט\n\n    public async chat(prompt: string): Promise<string> {\n\n        const body = {\n            model: \"gpt-3.5-turbo\",\n            max_tokens: 4096,\n            messages: [\n                // { role: \"system\", content: \"You are a helpful assistant.\" } // General ChatGPT Personality\n                { role: \"system\", content: \"You are a programming technology expert.\" }, // Specific ChatGPT Personality\n                { role: \"user\", content: prompt }\n            ]\n        };\n\n        const options = {\n            headers: {\n                Authorization: \"Bearer \" + appConfig.chatGptApiKey // Bearer לא לשכוח את הרווח אחרי המילה\n            }\n        };\n\n        const response = await axios.post(appConfig.chatGptUrl, body, options);\n\n        const completion = response.data.choices[0].message.content;\n\n        return completion;\n    }\n\n}\n\nexport const chatGptService = new ChatGptService();\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,oBAAoB;AAE9C,MAAMC,cAAc,CAAC;EAEjB;EACA;EACA;EACA;;EAEA,MAAaC,IAAIA,CAACC,MAAc,EAAmB;IAE/C,MAAMC,IAAI,GAAG;MACTC,KAAK,EAAE,eAAe;MACtBC,UAAU,EAAE,IAAI;MAChBC,QAAQ,EAAE;MACN;MACA;QAAEC,IAAI,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAA2C,CAAC;MAAE;MACzE;QAAED,IAAI,EAAE,MAAM;QAAEC,OAAO,EAAEN;MAAO,CAAC;IAEzC,CAAC;IAED,MAAMO,OAAO,GAAG;MACZC,OAAO,EAAE;QACLC,aAAa,EAAE,SAAS,GAAGZ,SAAS,CAACa,aAAa,CAAC;MACvD;IACJ,CAAC;IAED,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAACf,SAAS,CAACgB,UAAU,EAAEZ,IAAI,EAAEM,OAAO,CAAC;IAEtE,MAAMO,UAAU,GAAGH,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACX,OAAO;IAE3D,OAAOQ,UAAU;EACrB;AAEJ;AAEA,OAAO,MAAMI,cAAc,GAAG,IAAIpB,cAAc,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}